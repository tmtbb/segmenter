# Please tweak it to suit your environment and project.  You
# may want to move it to your project's root directory.
#
# SYNOPSIS:
#
#   make [all]  - makes everything.
#   make TARGET - makes the given target.
#   make clean  - removes all files generated by make.


# Where to find user code.

LIB_DIR = ../../../svc/library
LIB_DIR_O = ../../lib
USER_DIR = ../../pub
SO_DIR = ../../../svc/kid/bin/plugins

THIRD_PATH = $(LIB_DIR)/mylib/public

CUSTOM_THIRD_PATH = $(LIB_DIR)/mylib/third_party

LINK_PATHS = -L./ -L/usr/local/libmemcached-1.0.7/lib/  -L/usr/lib64/mysql

# Flags passed to the preprocessor.
CPPFLAGS += -isystem -shared -fPIC -D_DEBUG -DUSR_LOG_MSG -D_REENTRANT -D_GNU_SOURCE -DUSR_LOG_ERROR -DUSR_LOG_MSG -DNET_WORK -DBRY_PTL

# Flags passed to the C++ compiler.
CXXFLAGS += -g  -Wextra -pthread -shared -fPIC

# All tests produced by this Makefile.  Remember to add new tests you
# created to the list.
PLUGIN = $(SO_DIR)/segmentersvc/segmenter.so
                
INCLUDE_PATHS = -I/usr/local/libmemcached-1.0.7/include \
				-I$(LIB_DIR)/BasicCore\
				-I$(LIB_DIR)/mylib/public\
				-I./../../src\
				-I$(THIRD_PATH)\
				-I/usr/local/include\
				-I/usr/include/mysql\
				-I$(USER_DIR)\
				-I$(CUSTOM_THIRD_PATH)/hiredis\
				-I$(CUSTOM_THIRD_PATH)\
				-I$(LIB_DIR)/mylib/base\


# House-keeping build targets.

ALL_HEADERS = $(USER_HEADERS)
all : $(PLUGIN)

clean :
	rm -f $(PLUGIN)  *.o

# Builds gtest.a and gtest_main.a.

# Usually you shouldn't tweak such internal variables, indicated by a
# trailing _.
#GTEST_SRCS_ = $(GTEST_DIR)/src/*.cc $(GTEST_DIR)/src/*.h $(GTEST_HEADERS)

# For simplicity and to avoid depending on Google Test's
# implementation details, the dependencies specified below are
# conservative and not optimized.  This is fine as Google Test
# compiles fast and for ordinary users its source rarely changes.
#gtest-all.o : $(GTEST_SRCS_)
#	$(CXX) $(CPPFLAGS) -I$(GTEST_DIR) $(CXXFLAGS) -c \
            $(GTEST_DIR)/src/gtest-all.cc

#gtest_main.o : $(GTEST_SRCS_)
#	$(CXX) $(CPPFLAGS) -I$(GTEST_DIR) $(CXXFLAGS) -c \
            $(GTEST_DIR)/src/gtest_main.cc

#gtest.a : gtest-all.o
#	$(AR) $(ARFLAGS) $@ $^

#gtest_main.a : gtest-all.o gtest_main.o
#	$(AR) $(ARFLAGS) $@ $^

# Builds a sample test.  A test should link with either gtest.a or
# gtest_main.a, depending on whether it defines its own main()
# function.

segmenter_init.o : ./segmenter_init.cc ./segmenter_init.h
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c ./segmenter_init.cc $(INCLUDE_PATHS) 

segmenter_logic.o : ./segmenter_logic.cc ./segmenter_logic.h
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c ./segmenter_logic.cc $(INCLUDE_PATHS)
	
ptl_packet.o : ./ptl_packet.cc ./ptl_packet.h
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c ./ptl_packet.cc $(INCLUDE_PATHS)

segmenter_basic_info.o: ./segmenter_basic_info.cc ./segmenter_basic_info.h
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c ./segmenter_basic_info.cc $(INCLUDE_PATHS)

send_comm.o: ./send_comm.cc ./send_comm.h
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c ./send_comm.cc $(INCLUDE_PATHS)	
	

$(TEST) : 

$(PLUGIN) : segmenter_init.o segmenter_logic.o ptl_packet.o segmenter_basic_info.o send_comm.o\
	$(CUSTOM_THIRD_PATH)/dmg_fp/lib/dmg_fp.a $(LIB_DIR)/mylib/base/lib/mybase.a\
	$(CUSTOM_THIRD_PATH)/lib/libhiredis.a $(LIB_DIR_O)/libiconv.a\
	$(LIB_DIR_O)/libmemcached.a $(LIB_DIR_O)/libsegmenter.a\
	$(LIB_DIR_O)/libmemcachedutil.a /usr/local/lib/libpcre2-8.a /usr/local/lib/libpcre2-32.a
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) $(LINK_PATHS) -lpthread -lexpat -lrt -lpthread -ldl -lcurl \
	$^ -o $@
